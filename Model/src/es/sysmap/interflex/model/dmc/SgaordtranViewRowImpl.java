package es.sysmap.interflex.model.dmc;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.xml.parser.v2.XMLDocument;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class SgaordtranViewRowImpl extends ViewRowImpl implements es.sysmap.interflex.model.dmc.common.SgaordtranViewRow 
{


  public static final int IDORD = 0;
  public static final int IDTIP = 1;
  public static final int ESTADO = 2;
  public static final int IDMAC = 3;
  public static final int IDORDREUBIC = 4;
  public static final int CODERROR = 5;
  public static final int IDTRASLO = 6;
  public static final int SEQMLD = 7;
  public static final int SGAORDTRANVIEW = 8;
  public static final int SGAMACVIEW = 9;

  /**
   * 
   *  This is the default constructor (do not remove)
   */
  public SgaordtranViewRowImpl()
  {
  }

  /**
   * 
   *  Gets Sgaordtran entity object.
   */
  public es.sysmap.interflex.model.bdc.SgaordtranImpl getSgaordtran()
  {
    return (es.sysmap.interflex.model.bdc.SgaordtranImpl)getEntity(0);
  }

  /**
   * 
   *  Gets the attribute value for IDORD using the alias name Idord
   */
  public Number getIdord()
  {
    return (Number)getAttributeInternal(IDORD);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for IDORD using the alias name Idord
   */
  public void setIdord(Number value)
  {
    setAttributeInternal(IDORD, value);
  }

  /**
   * 
   *  Gets the attribute value for IDTIP using the alias name Idtip
   */
  public String getIdtip()
  {
    return (String)getAttributeInternal(IDTIP);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for IDTIP using the alias name Idtip
   */
  public void setIdtip(String value)
  {
    setAttributeInternal(IDTIP, value);
  }

  /**
   * 
   *  Gets the attribute value for ESTADO using the alias name Estado
   */
  public String getEstado()
  {
    return (String)getAttributeInternal(ESTADO);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for ESTADO using the alias name Estado
   */
  public void setEstado(String value)
  {
    setAttributeInternal(ESTADO, value);
  }

  /**
   * 
   *  Gets the attribute value for IDMAC using the alias name Idmac
   */
  public String getIdmac()
  {
    return (String)getAttributeInternal(IDMAC);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for IDMAC using the alias name Idmac
   */
  public void setIdmac(String value)
  {
    setAttributeInternal(IDMAC, value);
  }

  /**
   * 
   *  Gets the attribute value for IDORDREUBIC using the alias name Idordreubic
   */
  public Number getIdordreubic()
  {
    return (Number)getAttributeInternal(IDORDREUBIC);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for IDORDREUBIC using the alias name Idordreubic
   */
  public void setIdordreubic(Number value)
  {
    setAttributeInternal(IDORDREUBIC, value);
  }

  /**
   * 
   *  Gets the associated <code>RowIterator</code> using master-detail link SgaordtranView
   */
  public oracle.jbo.RowIterator getSgaordtranView()
  {
    return (oracle.jbo.RowIterator)getAttributeInternal(SGAORDTRANVIEW);
  }

  /**
   * 
   *  Gets the associated <code>Row</code> using master-detail link SgamacView
   */
  public oracle.jbo.Row getSgamacView()
  {
    return (oracle.jbo.Row)getAttributeInternal(SGAMACVIEW);
  }

  /**
   * 
   *  getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case IDORD:
        return getIdord();
      case IDTIP:
        return getIdtip();
      case ESTADO:
        return getEstado();
      case IDMAC:
        return getIdmac();
      case IDORDREUBIC:
        return getIdordreubic();
      case CODERROR:
        return getCoderror();
      case IDTRASLO:
        return getIdtraslo();
      case SEQMLD:
        return getSeqmld();
      case SGAORDTRANVIEW:
        return getSgaordtranView();
      case SGAMACVIEW:
        return getSgamacView();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case IDORD:
        setIdord((Number)value);
        return;
      case IDTIP:
        setIdtip((String)value);
        return;
      case ESTADO:
        setEstado((String)value);
        return;
      case IDMAC:
        setIdmac((String)value);
        return;
      case IDORDREUBIC:
        setIdordreubic((Number)value);
        return;
      case CODERROR:
        setCoderror((Number)value);
        return;
      case IDTRASLO:
        setIdtraslo((Number)value);
        return;
      case SEQMLD:
        setSeqmld((Number)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }


  /**
   * Devolver el documento XML correspondiente a este movimiento
   * @return 
   * @param xmldoc
   */
  public XMLDocument getXMLMovi(XMLDocument xmldoc)
  {
    return getSgaordtran().getXMLMovi(xmldoc);
  }
  
  /**
   * Poner el estado pendiente de aceptación de la orden por el PLC
   */
  public void setPendienteAceptacionPlc()
  {
    setEstado("P");
  }
  
  public boolean isPendienteAceptacionPlc()
  {
    return getEstado().equals("P");
  }
  
  
  public void setPendienteBorrarPlc()
  {
    setEstado ("b");
  }
  
  public boolean isPendienteBorrarPlc()
  {
   return getEstado().equals("b") || getEstado().equals("B");
  }
  
  
  public void setAceptadoPlc()
  {
    setEstado("C"); // en curso
  }
  
  public void resetPendientePlc()
  {
    setEstado("N"); // Nuevo
  }
  
  public void setAvis(int codigoError, String idUbiPosAct)
  {
    getSgaordtran().setAvis(codigoError,  idUbiPosAct);
  }
  
  public void setPeti(int codigoError, String idUbiPosAct)
  {
    getSgaordtran().setPeti(codigoError, idUbiPosAct);
  }
  
  /**
   * Michael 11.07.2006 añadido matrícula
   * @param matricula
   * @param posAct
   * @param codigoError
   */
  public void setFmov(int codigoError, int posAct, String matricula)
  {
    getSgaordtran().setFmov(codigoError, posAct, matricula);
  }

  /**
   * 
   *  Gets the attribute value for CODERROR using the alias name Coderror
   */
  public Number getCoderror()
  {
    return (Number)getAttributeInternal(CODERROR);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for CODERROR using the alias name Coderror
   */
  public void setCoderror(Number value)
  {
    if (value != null && value.intValue() != 0)
    {
      setEstado ("Z");  // Orden con error - :TODO - ver que posibilidades hay sólo para pruebas aquí
    }
    setAttributeInternal(CODERROR, value);
  }

  public void setCoderrorInt(int codError)
  {
    setCoderror(new Number(codError));
  }

  /**
   * 
   *  Gets the attribute value for IDTRASLO using the alias name Idtraslo
   */
  public Number getIdtraslo()
  {
    return (Number)getAttributeInternal(IDTRASLO);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for IDTRASLO using the alias name Idtraslo
   */
  public void setIdtraslo(Number value)
  {
    setAttributeInternal(IDTRASLO, value);
  }
  
  public void setDestinoTraslo(Number idTraslo, String idUbides, Number posicion)
  {
    getSgaordtran().setDestinoTraslo(idTraslo, idUbides, posicion);
  }


  public void setTraslo(Number idTraslo)
  {
    getSgaordtran().setTraslo(idTraslo);
  }

  public String toString ()
  {
    return "Ord: " + getIdord() + " Container: " + getIdmac() + " " + desde() + " " + hasta();
  }
  
  public String desde()
  {
    SgamacViewRowImpl mac = (SgamacViewRowImpl)getSgamacView();
    // 18.05.2005
    if (mac != null)
      return mac.getDescripUbipos();
    else
      return null;
  }
  
  public String hasta()
  {
    SgamacViewRowImpl mac = (SgamacViewRowImpl)getSgamacView();
    // 18.05.2005
    if (mac != null)
      return mac.getDescripUbides();
    else
      return null;
  }

  /**
   * 
   *  Gets the attribute value for SEQMLD using the alias name Seqmld
   */
  public Number getSeqmld()
  {
    return (Number)getAttributeInternal(SEQMLD);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for SEQMLD using the alias name Seqmld
   */
  public void setSeqmld(Number value)
  {
    setAttributeInternal(SEQMLD, value);
  }
  
  public String getRotacionMac()
  {
    SgamacViewRowImpl mac = (SgamacViewRowImpl)getSgamacView();
    if (mac != null)
      return mac.getRotacionMac();
    else
      return "C";

  }
  
}