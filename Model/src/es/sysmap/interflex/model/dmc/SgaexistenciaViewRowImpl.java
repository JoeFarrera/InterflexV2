package es.sysmap.interflex.model.dmc;
import es.sysmap.interflex.model.bdc.Sgamovexist;
import java.util.Vector;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import es.sysmap.interflex.model.bdc.common.FlexiDate;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class SgaexistenciaViewRowImpl extends ViewRowImpl 
{


  public static final int IDMAC = 0;
  public static final int CANTOT = 1;
  public static final int IDART = 2;
  public static final int CANRES = 3;
  public static final int ESTADO = 4;
  public static final int BLOQUEO = 5;
  public static final int INTEGRA = 6;
  public static final int IDARTIF = 7;
  public static final int DESCRIP = 8;
  public static final int FECENT = 9;
  public static final int MOTIVOBLOQUEO = 10;
  public static final int SGARESMATVIEW = 11;
  /**
   * 
   *  This is the default constructor (do not remove)
   */
  public SgaexistenciaViewRowImpl()
  {
  }

  /**
   * 
   *  Gets Sgaexistencia entity object.
   */
  public es.sysmap.interflex.model.bdc.SgaexistenciaImpl getSgaexistencia()
  {
    return (es.sysmap.interflex.model.bdc.SgaexistenciaImpl)getEntity(0);
  }


  public void reservarEntrada(Number canres)
  {
    getSgaexistencia().reservarEntrada(canres);
  }

  public boolean isUbicacionManual() 
  {
    return getSgaexistencia().isUbicacionManual();
  }

  /**
   * 
   *  Gets the attribute value for IDMAC using the alias name Idmac
   */
  public String getIdmac()
  {
    return (String)getAttributeInternal(IDMAC);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for IDMAC using the alias name Idmac
   */
  public void setIdmac(String value)
  {
    setAttributeInternal(IDMAC, value);
  }

  /**
   * 
   *  Gets the attribute value for CANTOT using the alias name Cantot
   */
  public Number getCantot()
  {
    return (Number)getAttributeInternal(CANTOT);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for CANTOT using the alias name Cantot
   */
  public void setCantot(Number value)
  {
    setAttributeInternal(CANTOT, value);
  
  }

  /**
   * 
   *  Gets the attribute value for IDART using the alias name Idart
   */
  public String getIdart()
  {
    return (String)getAttributeInternal(IDART);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for IDART using the alias name Idart
   */
  public void setIdart(String value)
  {
    setAttributeInternal(IDART, value);
  }

  /**
   * 
   *  Gets the attribute value for CANRES using the alias name Canres
   */
  public Number getCanres()
  {
    return (Number)getAttributeInternal(CANRES);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for CANRES using the alias name Canres
   */
  public void setCanres(Number value)
  {
    setAttributeInternal(CANRES, value);
  }

  /**
   * 
   *  Gets the attribute value for ESTADO using the alias name Estado
   */
  public String getEstado()
  {
    return (String)getAttributeInternal(ESTADO);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for ESTADO using the alias name Estado
   */
  public void setEstado(String value)
  {
    setAttributeInternal(ESTADO, value);
  }

  /**
   * 
   *  Gets the attribute value for BLOQUEO using the alias name Bloqueo
   */
  public String getBloqueo()
  {
    return (String)getAttributeInternal(BLOQUEO);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for BLOQUEO using the alias name Bloqueo
   */
  public void setBloqueo(String value)
  {
    setAttributeInternal(BLOQUEO, value);
  }


  /**
   * Registrar el estado <code>bloqueo</code> y el <code>motivo</code> de un bloqueo
   */
   
   public void setBloqueo (String bloqueo, String motivo)
   {
     setBloqueo (bloqueo);
     setMotivoBloqueo (motivo);
   }
   

  /**
   * 
   *  Gets the attribute value for INTEGRA using the alias name Integra
   */
  public String getIntegra()
  {
    return (String)getAttributeInternal(INTEGRA);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for INTEGRA using the alias name Integra
   */
  public void setIntegra(String value)
  {
    setAttributeInternal(INTEGRA, value);
    
  }


  /**
   * 
   *  getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case IDMAC:
        return getIdmac();
      case CANTOT:
        return getCantot();
      case IDART:
        return getIdart();
      case CANRES:
        return getCanres();
      case ESTADO:
        return getEstado();
      case BLOQUEO:
        return getBloqueo();
      case INTEGRA:
        return getIntegra();
      case IDARTIF:
        return getIdartif();
      case DESCRIP:
        return getDescrip();
      case FECENT:
        return getFecent();
      case MOTIVOBLOQUEO:
        return getMotivoBloqueo();
      case SGARESMATVIEW:
        return getSgaresmatView();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case IDMAC:
        setIdmac((String)value);
        return;
      case CANTOT:
        setCantot((Number)value);
        return;
      case IDART:
        setIdart((String)value);
        return;
      case CANRES:
        setCanres((Number)value);
        return;
      case ESTADO:
        setEstado((String)value);
        return;
      case BLOQUEO:
        setBloqueo((String)value);
        return;
      case INTEGRA:
        setIntegra((String)value);
        return;
      case FECENT:
        setFecent((FlexiDate)value);
        return;
      case MOTIVOBLOQUEO:
        setMotivoBloqueo((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   *  Gets the associated <code>RowIterator</code> using master-detail link SgaresmatView
   */
  public oracle.jbo.RowIterator getSgaresmatView()
  {
    return (oracle.jbo.RowIterator)getAttributeInternal(SGARESMATVIEW);
  }

  /**
   * 
   *  Gets the attribute value for IDARTIF using the alias name Idartif
   */
  public String getIdartif()
  {
    return (String)getAttributeInternal(IDARTIF);
  }

  /**
   * 
   *  Gets the attribute value for DESCRIP using the alias name Descrip
   */
  public String getDescrip()
  {
    return (String)getAttributeInternal(DESCRIP);
  }

  /**
   * 
   *  Gets the attribute value for FECENT using the alias name Fecent
   */
  public FlexiDate getFecent()
  {
    return (FlexiDate)getAttributeInternal(FECENT);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for FECENT using the alias name Fecent
   */
  public void setFecent(FlexiDate value)
  {
    setAttributeInternal(FECENT, value);
  }


  public void regularitzarExistencia(Number cancon, String observ)
  {
    if (!cancon.equals(getCantot()))
    {
      // Posem tota la informació a l'estructura que necessitem per crear l'històric
      Sgamovexist movexist = new Sgamovexist();
      movexist.setCancon(cancon);
      movexist.setCanres(new Number(0));
      movexist.setIdart(getIdart());
      movexist.setIdbulto(null);
      movexist.setIdcabnum(null);
      movexist.setIdcabstr(null);
      movexist.setIddoc(null);
      movexist.setIdlin(null);
      movexist.setIdmac(getIdmac());
      movexist.setIdtipdoc(null);
      movexist.setObserv(observ);
      movexist.setPesfin(null);
      movexist.setPesini(null);
      movexist.setUbipos(null);
      movexist.setTipmov("R");
      movexist.setNalbaran(null);
      movexist.setTalbaran(null);
    
      
      // Actualitzem l'existencia, deixant a cancon la quantitat a afegir o treure
      // per poder utilitzar els mateixos procediments que si fos una entrada o una
      // sortida
      if (getCantot().compareTo(cancon) < 0)
      {
        movexist.setCancon(cancon.subtract(getCantot()));
        getSgaexistencia().afegirMaterial(movexist);
      }
      else
      {
        movexist.setCancon(getCantot().subtract(cancon));
        getSgaexistencia().treureMaterial(movexist);
      }
    }
  }

  /**
   * 
   *  Gets the attribute value for MOTIVO_BLOQUEO using the alias name MotivoBloqueo
   */
  public String getMotivoBloqueo()
  {
    return (String)getAttributeInternal(MOTIVOBLOQUEO);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for MOTIVO_BLOQUEO using the alias name MotivoBloqueo
   */
  public void setMotivoBloqueo(String value)
  {
    if (value != null) 
    {
      int len = value.length();
      len = (len > 60) ? 60 : len;
      value = value.substring(0, len) + " (" + FlexiDate.currentDate().toSimpleDateStringFormat() + ")";
    }
    setAttributeInternal(MOTIVOBLOQUEO, value);
    
  }
  
  public boolean isReservaNegativa()
  {
    return getCanres().compareTo(0) == -1;
  }
  
  public void treureReservaNegativa()
  {
    if (isReservaNegativa())
    {
      setCanres(new Number(0));
      getSgaexistencia().quizasBorrarExistencia();
    }
  }


}