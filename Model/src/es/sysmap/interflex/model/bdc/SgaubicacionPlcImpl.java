package es.sysmap.interflex.model.bdc;
import es.sysmap.xml.XMLTelegrama;
import java.util.Vector;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.Key;
import oracle.xml.parser.v2.XMLNode;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class SgaubicacionPlcImpl extends SgaubicacionImpl 
{
  public static final int MAXATTRCONST = EntityDefImpl.getMaxAttrConst("es.sysmap.interflex.model.bdc.Sgaubicacion");
  public static final int CAPPUL = MAXATTRCONST;
  public static final int POSPLC = MAXATTRCONST + 1;











  private static SgaubicacionDefImpl mDefinitionObject;

  /**
   * 
   *  This is the default constructor (do not remove)
   */
  public SgaubicacionPlcImpl()
  {
  }

  /**
   * 
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (SgaubicacionDefImpl)EntityDefImpl.findDefObject("es.sysmap.interflex.model.bdc.SgaubicacionPlc");
    }
    return mDefinitionObject;
  }












  /**
   * 
   *  Gets the attribute value for Idtipalm, using the alias name Idtipalm
   */
  public String getIdtipalm()
  {
    return super.getIdtipalm();
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Idtipalm
   */
  public void setIdtipalm(String value)
  {
    super.setIdtipalm(value);
  }

  /**
   * 
   *  Gets the attribute value for Cappul, using the alias name Cappul
   */
  public Number getCappul()
  {
    return (Number)getAttributeInternal(CAPPUL);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Cappul
   */
  public void setCappul(Number value)
  {
    setAttributeInternal(CAPPUL, value);
  }

  /**
   * 
   *  Gets the attribute value for Posplc, using the alias name Posplc
   */
  public Number getPosplc()
  {
    return (Number)getAttributeInternal(POSPLC);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Posplc
   */
  public void setPosplc(Number value)
  {
    setAttributeInternal(POSPLC, value);
  }

  /**
   * 
   *  getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    if (index == CAPPUL)
    {
      return getCappul();
    }
    if (index == POSPLC)
    {
      return getPosplc();
    }
    if (index == IDTIPALM)
    {
      return getIdtipalm();
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    if (index == CAPPUL)
    {
      setCappul((Number)value);
      return;
    }
    if (index == POSPLC)
    {
      setPosplc((Number)value);
      return;
    }
    if (index == IDTIPALM)
    {
      setIdtipalm((String)value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
    return;
  }


  public XMLNode getXMLUbicacionEntrada(XMLNode node)
  {
    return getXMLUbicacion(node);
  }

  /**
   * Confeccionar el nodo XML correspondiente a la ubicación
   * @return 
   * @param node
   */
  public XMLNode getXMLUbicacion(XMLNode node)
  {
  try 
  {
    node.getFirstChild().setNodeValue(getPosplc().toString());
    XMLTelegrama.setValorNodo(node,"lado", "0");
    XMLTelegrama.setValorNodo(node,"columna","0");
    XMLTelegrama.setValorNodo(node,"nivel", "0");
    XMLTelegrama.setValorNodo(node,"posUbicacion", "0");

  } catch (Exception ex) 
  {
    LOG.error("getXMLUbicacion",ex);
  } 
    return node;
  }
  
  
    /**
   * 
   * @return el nodo XML correspondiente al siguiente destino desde esta posición
   * Si es la 44, será la ubicación si la ubicación destino es el pasillo 1
   * Si no, es la mesa de salida del pasillo 1
   * Si es la 6, será la ubicación destino
   * Si es la 9, será la posición de donde ha iniciado la orden
   * Si es otro (salida pasillo), será :TODO XXXXXXXXXXXXX
   * @param ubiDes
   * @param node
   */
  public XMLNode getXMLUbicacionSiguiente(XMLNode node, SgaubicacionImpl ubiDes)
  {
    if (getPosplc().intValue() == POSPLC_ENTRADA_EXTRA_MESA_PASILLO)
    {
      if (ubiDes instanceof SgaubicacionSiloImpl)
      {
        SgaubicacionSiloImpl ubiSilo = (SgaubicacionSiloImpl)ubiDes;
        if (ubiSilo.getPasillo().intValue() == PASILLO_1)
        {
          node = ubiSilo.getXMLUbicacion(node);
        }
      }
      // En todos los otros casos, la ubicación es la salida del pasillo 1
      node.getFirstChild().setNodeValue(Integer.toString(POSPLC_27));
      XMLTelegrama.setValorNodo(node,"lado", "0");
      XMLTelegrama.setValorNodo(node,"columna","0");
      XMLTelegrama.setValorNodo(node,"nivel", "0");
      XMLTelegrama.setValorNodo(node,"posUbicacion", "0");
    }
    else 
    {
      // será ya el destino directamente :TODO - EXCEPTO CUANDO ES SALIDA POR LA EXTRA
      node = ubiDes.getXMLUbicacion(node);
    }
    return node;
  }



  /**
   * 
   * @return el nodo XML correspondiente al siguiente destino desde esta posición
   * Si es la entrada extra, será la mesa de entrega al pasillo 1
   * Si no, es la mesa de entrada del pasillo correspondiente a la ubicación (o el destino en caso del Miniload)
   * @param ubiDes
   * @param node
   */
  public XMLNode getXMLUbicacionSiguiente(XMLNode node, SgaposicionubicacionImpl posUbiDes)
  {
    if (getPosplc().intValue() == POSPLC_ENTRADA_EXTRA_MESA_PASILLO)
    {
      SgaubicacionImpl ubiDes= posUbiDes.getSgaubicacion();
      if (ubiDes instanceof SgaubicacionSiloImpl)
      {
        SgaubicacionSiloImpl ubiSilo = (SgaubicacionSiloImpl)ubiDes;
        if (ubiSilo.getPasillo().intValue() == PASILLO_1)
        {
          // Es una entrada extra al pasillo 1 directamente
          node = posUbiDes.getXMLPosicion(node);
          return node;
        }
      }
      // En todos los otros casos, la ubicación es la salida del pasillo 1
      node.getFirstChild().setNodeValue(Integer.toString(POSPLC_27));
      XMLTelegrama.setValorNodo(node,"lado", "0");
      XMLTelegrama.setValorNodo(node,"columna","0");
      XMLTelegrama.setValorNodo(node,"nivel", "0");
      XMLTelegrama.setValorNodo(node,"posUbicacion", "0");
    }
    else
    {
      // será ya el destino directamente :TODO - EXCEPTO CUANDO ES SALIDA POR LA EXTRA
      // :TODO - Ver en que posiciones indicar el destino final o la entrada pasillo si es una ubicaciòn de silo
      posUbiDes.getXMLPosicion(node);
    }
    return node;
  }
  
  
  public void getDisponibilitat(SgaposicionubicacionImpl posicioUbicacio, Vector disponibilitat)
  {
    disponibilitat.addElement(getEntityDef().getProperty("UBICACIO_PLC"));
  }

  /**
   * 
   *  Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String idubi)
  {
    return new Key(new Object[] {idubi});
  }











}