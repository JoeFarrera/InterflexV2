package es.sysmap.interflex.model.dmc;
import es.sysmap.interflex.etiquetes.EtiquetaPicking; // Jaume 18/03/2015
import es.sysmap.interflex.model.bdc.common.FlexiDate; // Jaume 18/03/2015
import es.sysmap.interflex.model.dmc.SgacdocViewRowImpl;
import es.sysmap.interflex.model.dmc.common.SgaexpedbultoViewRow;
import javax.swing.DefaultListModel;
import oracle.jbo.RowIterator;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

  public class SgaexpedbultoViewRowImpl extends ViewRowImpl implements es.sysmap.interflex.model.dmc.common.SgaexpedbultoViewRow  
{


  public static final int IDEXPED = 0;
  public static final int IDBULTO = 1;
  public static final int IDBULTOORI = 2;
  public static final int IDTIPOBULTO = 3;
  public static final int LARGO = 4;
  public static final int ANCHO = 5;
  public static final int ALTO = 6;
  public static final int PESOCONT = 7;
  public static final int SGAEXPEDVIEW = 8;
  public static final int SGAEXPEDLBULTOVIEW = 9;
  /**
   * 
   *  This is the default constructor (do not remove)
   */
  public SgaexpedbultoViewRowImpl()
  {
  }

  /**
   * 
   *  Gets Sgaexpedbulto entity object.
   */
  public es.sysmap.interflex.model.bdc.SgaexpedbultoImpl getSgaexpedbulto()
  {
    return (es.sysmap.interflex.model.bdc.SgaexpedbultoImpl)getEntity(0);
  }

  /**
   * 
   *  Gets the attribute value for IDEXPED using the alias name Idexped
   */
  public Number getIdexped()
  {
    return (Number)getAttributeInternal(IDEXPED);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for IDEXPED using the alias name Idexped
   */
  public void setIdexped(Number value)
  {
    setAttributeInternal(IDEXPED, value);
  }

  /**
   * 
   *  Gets the attribute value for IDBULTO using the alias name Idbulto
   */
  public Number getIdbulto()
  {
    return (Number)getAttributeInternal(IDBULTO);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for IDBULTO using the alias name Idbulto
   */
  public void setIdbulto(Number value)
  {
    setAttributeInternal(IDBULTO, value);
  }

  /**
   * 
   *  Gets the attribute value for IDBULTO_ORI using the alias name IdbultoOri
   */
  public Number getIdbultoOri()
  {
    return (Number)getAttributeInternal(IDBULTOORI);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for IDBULTO_ORI using the alias name IdbultoOri
   */
  public void setIdbultoOri(Number value)
  {
    setAttributeInternal(IDBULTOORI, value);
  }

  /**
   * 
   *  Gets the associated <code>RowIterator</code> using master-detail link SgaexpedlbultoView
   */
  public oracle.jbo.RowIterator getSgaexpedlbultoView()
  {
    return (oracle.jbo.RowIterator)getAttributeInternal(SGAEXPEDLBULTOVIEW);
  }
 
 /**
   * Comprovar si ja hi es el document 
   * @return <true> si hi es, <false> sino
   * @param iddoc
   */
  public boolean hasBultoCdoc  (Number iddoc) 
  {
    RowIterator rows = getSgaexpedlbultoView();
    while (rows.hasNext()) 
    {
      SgaexpedlbultoViewRowImpl lbulto = (SgaexpedlbultoViewRowImpl)rows.next();
      if (lbulto.getIddoc().equals(iddoc))
        return true;
        
    }
    return false;

  }
  
  /**
   * Insertar linies bulto
   */
   
   public void insertlbulto (SgabultoViewRowImpl bulto) 
   {
     RowIterator bultoRows = bulto.getSgalbultoView();
     while (bultoRows.hasNext()) 
      {
        SgalbultoViewRowImpl lbulto = (SgalbultoViewRowImpl)bultoRows.next();
        SgaexpedlbultoViewRowImpl row = (SgaexpedlbultoViewRowImpl)getSgaexpedlbultoView().createRow();
        row.setIdbulto(getIdbulto());
        row.setIddoc(bulto.getIddoc());
        row.setIdexped(getIdexped());
        row.setIdlin(lbulto.getIdlin());
        row.setCantot(lbulto.getCantot());
        row.setPeso(lbulto.getPeso());
  
        getSgaexpedlbultoView().insertRow(row);
      }

   }

  /**
   * 
   *  getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case IDEXPED:
        return getIdexped();
      case IDBULTO:
        return getIdbulto();
      case IDBULTOORI:
        return getIdbultoOri();
      case IDTIPOBULTO:
        return getIdtipobulto();
      case LARGO:
        return getLargo();
      case ANCHO:
        return getAncho();
      case ALTO:
        return getAlto();
      case PESOCONT:
        return getPesocont();
      case SGAEXPEDLBULTOVIEW:
        return getSgaexpedlbultoView();
      case SGAEXPEDVIEW:
        return getSgaexpedView();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case IDEXPED:
        setIdexped((Number)value);
        return;
      case IDBULTO:
        setIdbulto((Number)value);
        return;
      case IDBULTOORI:
        setIdbultoOri((Number)value);
        return;
      case IDTIPOBULTO:
        setIdtipobulto((String)value);
        return;
      case LARGO:
        setLargo((Number)value);
        return;
      case ANCHO:
        setAncho((Number)value);
        return;
      case ALTO:
        setAlto((Number)value);
        return;
      case PESOCONT:
        setPesocont((Number)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   *  Gets the attribute value for IDTIPOBULTO using the alias name Idtipobulto
   */
  public String getIdtipobulto()
  {
    return (String)getAttributeInternal(IDTIPOBULTO);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for IDTIPOBULTO using the alias name Idtipobulto
   */
  public void setIdtipobulto(String value)
  {
    setAttributeInternal(IDTIPOBULTO, value);
  }

  /**
   * 
   *  Gets the attribute value for LARGO using the alias name Largo
   */
  public Number getLargo()
  {
    return (Number)getAttributeInternal(LARGO);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for LARGO using the alias name Largo
   */
  public void setLargo(Number value)
  {
    setAttributeInternal(LARGO, value);
  }

  /**
   * 
   *  Gets the attribute value for ANCHO using the alias name Ancho
   */
  public Number getAncho()
  {
    return (Number)getAttributeInternal(ANCHO);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for ANCHO using the alias name Ancho
   */
  public void setAncho(Number value)
  {
    setAttributeInternal(ANCHO, value);
  }

  /**
   * 
   *  Gets the attribute value for ALTO using the alias name Alto
   */
  public Number getAlto()
  {
    return (Number)getAttributeInternal(ALTO);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for ALTO using the alias name Alto
   */
  public void setAlto(Number value)
  {
    setAttributeInternal(ALTO, value);
  }

  /**
   * 
   *  Gets the attribute value for PESOCONT using the alias name Pesocont
   */
  public Number getPesocont()
  {
    return (Number)getAttributeInternal(PESOCONT);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for PESOCONT using the alias name Pesocont
   */
  public void setPesocont(Number value)
  {
    setAttributeInternal(PESOCONT, value);
  }
  
   public DefaultListModel getLlistaBulto() 
   {
     return getSgaexpedbulto().getLlistaBulto();
   }
   
   public void afegirABultoSortida(Number iddoc, Number idlin, String idart, Number cantot, Number pes, boolean absolut)
   {
     getSgaexpedbulto().afegirABultoSortida(iddoc, idlin, idart, cantot, pes, absolut);
   }
   
  public void treureDeBultoSortida(Number iddoc, Number idlin)
  {
    getSgaexpedbulto().treureDeBultoSortida(iddoc, idlin);
  }  

  
  
  public SgaexpedbultoViewRow afegirBulto() 
  {
    SgaexpedViewRowImpl exped = (SgaexpedViewRowImpl)getSgaexpedView();
    return (SgaexpedbultoViewRow)exped.afegirBulto(this);
  }
  
  private oracle.jbo.Row getSgaCdocView()
  {
    RowIterator lbultoRows = getSgaexpedlbultoView();
    SgaexpedlbultoViewRowImpl row = (SgaexpedlbultoViewRowImpl)lbultoRows.first();
    return row.getSgacdoc();
    
  }
  /**
   * 
   *  Gets the associated <code>Row</code> using master-detail link SgaexpedView
   */
  public oracle.jbo.Row getSgaexpedView()
  {
    return (oracle.jbo.Row)getAttributeInternal(SGAEXPEDVIEW);
  }
  
    /**
   * Modifica la quantitat de la línia del bulto
   * 
   */
   public void modCantLineaBultoSortida(Number iddoc, Number idlin, int cantTreta, Number pes)
   {
     getSgaexpedbulto().modCantLineaBultoSortida(iddoc, idlin, cantTreta, pes);
   }
   
   /**
   * Posa les dades necessaries per fer l'etiqueta dins l'estructura de dades
   * @return 
   */


  public EtiquetaPicking getDadesEtiqueta()
  {
    EtiquetaPicking etiqueta = null;
    // Michael 02.10.2009 Better to propogate the exception
    try
    {
      boolean bultoOri = (getIdbultoOri() != null);
      SgaexpedViewRowImpl expedRow = (SgaexpedViewRowImpl)getSgaexpedView(); 
      SgacdocViewRowImpl cdoc = (SgacdocViewRowImpl)expedRow.getFirstCdocRow();
      etiqueta = new EtiquetaPicking();
      etiqueta.setIdConsignatari(cdoc.getCcliente().toString());                         //cdoc
      etiqueta.setNomConsignatari(cdoc.getNombre());                                     //cdoc
      etiqueta.setAdreçaConsignatari_1(cdoc.getDireccion());                             //cdoc
      etiqueta.setAdreçaConsignatari_2(cdoc.getCodpostal() + " " + cdoc.getPoblacion()); //cdoc
      etiqueta.setAdreçaConsignatari_3(cdoc.getProvincia());                             //cdoc
      etiqueta.setData(FlexiDate.currentDate().toSimpleDateStringFormat());
      if (bultoOri)
      {
        SgacdocViewRowImpl cdocAlbaran = (SgacdocViewRowImpl)getSgaCdocView();
        String nalbaran = (cdocAlbaran.getNalbaran() != null) ? cdocAlbaran.getNalbaran() : "";          //cdoc
        etiqueta.setAlbara(nalbaran);
        etiqueta.setAlbara_barras(nalbaran);
        etiqueta.setIdBulto(getIdbultoOri().toString());
      }
      else
        {
          String nalbaran = (expedRow.getIdexped() != null) ? "EX/" + expedRow.getIdexped() : "EX/??";
          etiqueta.setAlbara(nalbaran);
          etiqueta.setIdBulto(getIdbulto().toString());
          
        }
 
      etiqueta.setPorts(cdoc.getPortes());
      etiqueta.setTransportista(cdoc.getTransporte());                                   //cdoc
      etiqueta.setPes(getPes().toString());                                             //Peso
      
      // Michael 09.02.2006 Incorporar datos del código de barras, si lo tiene
      if (cdoc.hasEtiquetaBarras())
      {
        etiqueta.setEtiquetaBarras(true);
        etiqueta.setEti_cli_redur(cdoc.getEtiCliRedur());                                //cdoc
        etiqueta.setEti_cod_postal(cdoc.getEtiCodPostal());                              //cdoc
        etiqueta.setEti_plaza(cdoc.getEtiPlaza());                                       //cdoc
        etiqueta.setEti_tipo_cb(cdoc.getEtiTipoCb());                                    //cdoc
        etiqueta.setEti_pais_origen(cdoc.getEtiPaisOrigen());                            //cdoc
        etiqueta.setEti_pais_destino(cdoc.getEtiPaisDestino());                          //cdoc
        // Michael 09.10.2006
        etiqueta.setTelefono(cdoc.getTelefono());                                        //cdoc
      }
      else
      {
        etiqueta.setEtiquetaBarras(false);
      }
    }
    catch(Exception ex)
    {
      etiqueta = null;
    }
    
    return etiqueta;
  }

   
   private Number getPes()
   {
     Number pes = new Number (0);
     RowIterator rows = getSgaexpedlbultoView();
     while (rows.hasNext())
     {
       SgaexpedlbultoViewRowImpl linia = (SgaexpedlbultoViewRowImpl)rows.next();
       Number pesLinia = linia.getPeso();
       pes = pes.add(pesLinia);
     }
     return pes;
   }
  

  

}