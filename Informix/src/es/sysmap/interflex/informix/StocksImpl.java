package es.sysmap.interflex.informix;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import java.math.BigDecimal;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class StocksImpl extends EntityImpl 
{
  public static final int ROWID = 0;
  public static final int STOCBARRA = 1;
  public static final int STODESCREF = 2;
  public static final int STOFCREACION = 3;
  public static final int STOFULTACT = 4;
  public static final int STOID = 5;
  public static final int STOPESOUNITARIO = 6;
  public static final int STOSTOCK = 7;
  public static final int STOUEMB = 8;
  private static EntityDefImpl mDefinitionObject;

  /**
   * 
   *  This is the default constructor (do not remove)
   */
  public StocksImpl()
  {
  }

  /**
   * 
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("es.sysmap.interflex.informix.Stocks");
    }
    return mDefinitionObject;
  }

  /**
   * 
   *  Gets the attribute value for RowID, using the alias name RowID
   */
  public String getRowID()
  {
    return (String)getAttributeInternal(ROWID);
  }

  /**
   * 
   *  Gets the attribute value for StoCBarra, using the alias name StoCBarra
   */
  public BigDecimal getStoCBarra()
  {
    return (BigDecimal)getAttributeInternal(STOCBARRA);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for StoCBarra
   */
  public void setStoCBarra(BigDecimal value)
  {
    setAttributeInternal(STOCBARRA, value);
  }

  /**
   * 
   *  Gets the attribute value for StoDescRef, using the alias name StoDescRef
   */
  public String getStoDescRef()
  {
    return (String)getAttributeInternal(STODESCREF);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for StoDescRef
   */
  public void setStoDescRef(String value)
  {
    setAttributeInternal(STODESCREF, value);
  }

  /**
   * 
   *  Gets the attribute value for StoFcreacion, using the alias name StoFcreacion
   */
  public String getStoFcreacion()
  {
    return (String)getAttributeInternal(STOFCREACION);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for StoFcreacion
   */
  public void setStoFcreacion(String value)
  {
    setAttributeInternal(STOFCREACION, value);
  }

  /**
   * 
   *  Gets the attribute value for StoFultAct, using the alias name StoFultAct
   */
  public String getStoFultAct()
  {
    return (String)getAttributeInternal(STOFULTACT);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for StoFultAct
   */
  public void setStoFultAct(String value)
  {
    setAttributeInternal(STOFULTACT, value);
  }

  /**
   * 
   *  Gets the attribute value for StoId, using the alias name StoId
   */
  public String getStoId()
  {
    return (String)getAttributeInternal(STOID);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for StoId
   */
  public void setStoId(String value)
  {
    setAttributeInternal(STOID, value);
  }

  /**
   * 
   *  Gets the attribute value for StoPesoUnitario, using the alias name StoPesoUnitario
   */
  public BigDecimal getStoPesoUnitario()
  {
    return (BigDecimal)getAttributeInternal(STOPESOUNITARIO);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for StoPesoUnitario
   */
  public void setStoPesoUnitario(BigDecimal value)
  {
    setAttributeInternal(STOPESOUNITARIO, value);
  }

  /**
   * 
   *  Gets the attribute value for StoStock, using the alias name StoStock
   */
  public BigDecimal getStoStock()
  {
    return (BigDecimal)getAttributeInternal(STOSTOCK);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for StoStock
   */
  public void setStoStock(BigDecimal value)
  {
    setAttributeInternal(STOSTOCK, value);
  }

  /**
   * 
   *  Gets the attribute value for StoUEmb, using the alias name StoUEmb
   */
  public BigDecimal getStoUEmb()
  {
    return (BigDecimal)getAttributeInternal(STOUEMB);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for StoUEmb
   */
  public void setStoUEmb(BigDecimal value)
  {
    setAttributeInternal(STOUEMB, value);
  }

  /**
   * 
   *  getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case ROWID:
        return getRowID();
      case STOCBARRA:
        return getStoCBarra();
      case STODESCREF:
        return getStoDescRef();
      case STOFCREACION:
        return getStoFcreacion();
      case STOFULTACT:
        return getStoFultAct();
      case STOID:
        return getStoId();
      case STOPESOUNITARIO:
        return getStoPesoUnitario();
      case STOSTOCK:
        return getStoStock();
      case STOUEMB:
        return getStoUEmb();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case STOCBARRA:
        setStoCBarra((BigDecimal)value);
        return;
      case STODESCREF:
        setStoDescRef((String)value);
        return;
      case STOFCREACION:
        setStoFcreacion((String)value);
        return;
      case STOFULTACT:
        setStoFultAct((String)value);
        return;
      case STOID:
        setStoId((String)value);
        return;
      case STOPESOUNITARIO:
        setStoPesoUnitario((BigDecimal)value);
        return;
      case STOSTOCK:
        setStoStock((BigDecimal)value);
        return;
      case STOUEMB:
        setStoUEmb((BigDecimal)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }
}